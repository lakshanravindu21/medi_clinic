// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // ‚ùå removed custom output to avoid mismatch
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  PATIENT
  ADMIN
  DOCTOR
}

enum AppointmentStatus {
  BOOKED
  CANCELED
  COMPLETED
  RESCHEDULED
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(PATIENT)
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  appointments Appointment[]
  
  @@map("users")
}

model Doctor {
  id             String   @id @default(uuid())
  name           String
  email          String   @unique
  specialization String
  description    String?
  imageUrl       String?
  phone          String?
  availability   String   @default("{}") // JSON string for availability schedule
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  appointments Appointment[]
  
  @@map("doctors")
}

model Appointment {
  id                  String            @id @default(uuid())
  patientId           String
  doctorId            String
  appointmentDateTime DateTime
  reason              String?
  symptoms            String?
  status              AppointmentStatus @default(BOOKED)
  notes               String?
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt

  // Relations
  patient User   @relation(fields: [patientId], references: [id], onDelete: Cascade)
  doctor  Doctor @relation(fields: [doctorId], references: [id], onDelete: Cascade)

  @@map("appointments")
}

model PasswordReset {
  id        String   @id @default(uuid())
  email     String
  token     String   @unique
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())

  @@map("password_resets")
}
